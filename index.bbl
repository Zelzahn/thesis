% Generated by IEEEtran.bst, version: 1.14 (2015/08/26)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{ars:trains}
\BIBentryALTinterwordspacing
S.~Harding, ``5.25-inch floppy disks expected to help run san francisco trains until 2030,'' \emph{Ars Technica}, 2024. [Online]. Available: \url{https://arstechnica.com/gadgets/2024/04/5-25-inch-floppy-disks-expected-to-help-run-san-francisco-trains-until-2030/}
\BIBentrySTDinterwordspacing

\bibitem{aptiv:ota}
\BIBentryALTinterwordspacing
Aptiv, ``What is over-the-air (ota)?'' \emph{Mobility Insider}, 2020. [Online]. Available: \url{https://www.aptiv.com/en/insights/article/what-is-over-the-air-(ota)}
\BIBentrySTDinterwordspacing

\bibitem{wasm:ps}
P.~Clark, ``Adobe photoshop streamlines power and precision for the web; now includes widely popular adobe firefly powered features,'' \url{https://blog.adobe.com/en/publish/2023/09/27/photoshop-streamlines-power-precision-web}, 2023.

\bibitem{wasm:ge}
G.~Shah, ``Welcome home to the new google earth,'' \url{https://blog.google/products/earth/welcome-home-new-google-earth/}, 2017.

\bibitem{gh:emscripten}
emscripten core, ``emscripten,'' \url{https://github.com/emscripten-core/emscripten}.

\bibitem{nodejs}
O.~Foundation, ``Node.js,'' \url{https://nodejs.org/en}.

\bibitem{deno}
R.~Dahl, B.~Belder, and B.~Iwańczuk, ``Deno 1.0,'' \url{https://deno.com/blog/v1}, May 2020.

\bibitem{deno:wasi}
A.~Jiang, B.~Iwańczuk, D.~Sherret, K.~Whinnery, L.~Kettmeir, M.~Mastracci, N.~Rahman, Y.~Hinosawa, and M.~Hagemeister, ``Deno 1.38: Html doc generator and hmr,'' \url{https://deno.com/blog/v1.38#deprecation-of-stdwasi}, 2023.

\bibitem{wasi}
\BIBentryALTinterwordspacing
P.~Hickey, J.~Konka, D.~Gohman, S.~Clegg, A.~Brown, A.~Crichton, L.~Clark, C.~Ihrig, P.~Huene, Y.~Yuji, D.~Vasilik, J.~Triplett, S.~Rubanov, S.~Akbary, M.~Frysinger, A.~Turner, A.~Zakai, A.~Mackenzie, B.~Brittain, C.~Beyer, D.~McKay, L.~Wang, M.~Mielniczuk, M.~Berger, PTrottier, P.~Sikora, T.~Schneidereit, katelyn martin, and nasso, ``Webassembly/wasi: snapshot-01,'' \emph{Zenodo}, Dec. 2020. [Online]. Available: \url{https://doi.org/10.5281/zenodo.4323447}
\BIBentrySTDinterwordspacing

\bibitem{ba:announce}
L.~Clark, ``Announcing the bytecode alliance: Building a secure by default, composable future for webassembly,'' \url{https://bytecodealliance.org/articles/announcing-the-bytecode-alliance}, 2019.

\bibitem{cap-security}
\BIBentryALTinterwordspacing
J.~B. Dennis and E.~C. Van~Horn, ``Programming semantics for multiprogrammed computations,'' \emph{Commun. ACM}, vol.~9, no.~3, p. 143–155, mar 1966. [Online]. Available: \url{https://doi.org/10.1145/365230.365252}
\BIBentrySTDinterwordspacing

\bibitem{gh:wit_deps}
R.~Volosatovs, ``wit-deps,'' \url{https://github.com/bytecodealliance/wit-deps}.

\bibitem{wasmtime}
L.~Clark, ``Wasmtime reaches 1.0: Fast, safe and production ready!'' \url{https://bytecodealliance.org/articles/wasmtime-1-0-fast-safe-and-production-ready}, 2022.

\bibitem{gh:wamr}
B.~Alliance, ``wasm-micro-runtime,'' \url{https://github.com/bytecodealliance/wasm-micro-runtime}.

\bibitem{gh:wrsdk}
------, ``wamr-rust-sdk,'' \url{https://github.com/bytecodealliance/wamr-rust-sdk}.

\bibitem{jco}
Y.~Wuyts, ``Announcing jco 1.0,'' \url{https://bytecodealliance.org/articles/jco-1.0}, 2024.

\bibitem{gh:cpy}
B.~Alliance, ``componentize-py,'' \url{https://github.com/bytecodealliance/componentize-py}.

\bibitem{yt:chicory}
B.~Eckel and A.~Peruffo, ``Chicory: Creating a language-native wasm runtime,'' \url{https://www.youtube.com/watch?v=jrnMhWiV23w}, 2024.

\bibitem{mechanoid}
hybridgroup, ``Mechanoid,'' \url{https://mechanoid.io/}.

\bibitem{wazero}
A.~Cole, ``Introducing wazero from tetrate,'' \url{https://tetrate.io/blog/introducing-wazero-from-tetrate/}, 2023.

\bibitem{gh:wasman}
hybridgroup, ``wasman,'' \url{https://github.com/hybridgroup/wasman}.

\bibitem{gh:i2c-bus}
fivdi, ``i2c-bus,'' \url{https://github.com/fivdi/i2c-bus/tree/master}.

\bibitem{chirimen}
C.~O. Hardware, ``Chirimen drivers,'' \url{https://chirimen.org/chirimen-drivers/}.

\bibitem{windows:i2c}
M.~Hopkins, ``Introduction to hid over i2c,'' \url{https://learn.microsoft.com/en-us/windows-hardware/drivers/hid/hid-over-i2c-guide}, 2024.

\bibitem{linux:i2c}
T.~kernel~development community, ``I2c device interface,'' \url{https://www.kernel.org/doc/html/v5.4/i2c/dev-interface.html}.

\bibitem{macos:i2c}
``Ioi2cinterface.h user-space,'' \url{https://developer.apple.com/documentation/iokit/ioi2cinterface_h_user-space}.

\bibitem{gh:wt}
B.~Alliance, ``wasm-tools,'' \url{https://github.com/bytecodealliance/wasm-tools}.

\bibitem{builder}
P.~Huene, D.~Anderson, and J.~Mart, \url{https://wasmbuilder.app/}.

\bibitem{gh:cc}
B.~Alliance, ``cargo-component,'' \url{https://github.com/bytecodealliance/cargo-component}.

\bibitem{rust:p2}
Y.~Wuyts, ``Changes to rust's wasi targets,'' \url{https://blog.rust-lang.org/2024/04/09/updates-to-rusts-wasi-targets.html}, 2024.

\bibitem{gh:wit-bindgen}
B.~Alliance, ``wit-bindgen,'' \url{https://github.com/bytecodealliance/wit-bindgen}.

\bibitem{gh:cjs}
------, ``Componentizejs,'' \url{https://github.com/bytecodealliance/ComponentizeJS}.

\bibitem{crates:bindgen}
wasmtime, ``Macro wasmtime::component::bindgen,'' \url{https://docs.rs/wasmtime/latest/wasmtime/component/macro.bindgen.html}.

\bibitem{nxp:i2c}
\emph{I2C-bus specification and user manual}, NXP Semiconductors, 10 2021, rev. 7.

\bibitem{smbus}
\emph{System Management Bus (SMBus) Specification}, System Management Interface Forum, 1 2022, rev. 3.2.

\bibitem{gh:eh}
R.~Embedded, ``embedded-hal,'' \url{https://github.com/rust-embedded/embedded-hal}.

\bibitem{gh:aer}
R.~E.~R. Team, ``Embedded rust,'' \url{https://github.com/rust-embedded/awesome-embedded-rust}.

\bibitem{hal:1}
E.~R.~W. Group, ``embedded-hal v1.0 now released!'' \url{https://blog.rust-embedded.org/embedded-hal-v1/}, 2024.

\bibitem{gh:ehcl}
R.~Kurte, ``Embedded hal compatibility layer,'' \url{https://github.com/ryankurte/embedded-hal-compat}.

\bibitem{crates:svd2rust}
J.~Aparicio, ``svd2rust,'' \url{https://crates.io/crates/svd2rust}.

\bibitem{probe-rs}
probe rs, ``probe-rs,'' \url{https://probe.rs/}.

\bibitem{dap}
Microsoft, ``Debug adapter protocol,'' \url{https://microsoft.github.io/debug-adapter-protocol/}.

\bibitem{gh:i2c}
F.~Vandenberghe, L.~Clark, and J.~Schilling, ``Wasi i2c,'' \url{https://github.com/WebAssembly/wasi-i2c}.

\bibitem{gh:io}
D.~Gohman, ``Wasi i/o,'' \url{https://github.com/WebAssembly/wasi-io}.

\bibitem{gh:iwc}
F.~Vandenberghe, ``i2c-wasm-components,'' \url{https://github.com/Zelzahn/i2c-wasm-components}.

\bibitem{gh:hts221}
D.~Gallagher, ``hts221,'' \url{https://github.com/danielgallagher0/hts221}.

\bibitem{gh:hts221-fork}
F.~Vandenberghe, ``hts221,'' \url{https://github.com/Zelzahn/hts221}.

\bibitem{gh:leh}
R.~E.~L. team, ``linux-embedded-hal,'' \url{https://github.com/rust-embedded/linux-embedded-hal}.

\bibitem{gh:rppal}
R.~van~der Meer, ``Rppal - raspberry pi peripheral access library,'' \url{https://github.com/golemparts/rppal}.

\bibitem{gh:rppico}
rp~rs, ``rp-pico,'' \url{https://github.com/rp-rs/rp-hal-boards}.

\bibitem{gh:weh}
F.~Vandenberghe, ``wasi-embedded-hal,'' \url{https://github.com/Zelzahn/wasi-embedded-hal}.

\bibitem{gh:once-cell}
A.~Kladov, ``once\_cell,'' \url{https://github.com/matklad/once_cell}.

\bibitem{lld}
E.~R.~W. Group, ``Psa: Cortex-m breakage (lld as the default linker),'' \url{https://blog.rust-embedded.org/2018-08-2x-psa-cortex-m-breakage/}, 2018.

\bibitem{gh:wrs:error}
F.~Vandenberghe, ``Compiling wamr-sys for thumbv6m-none-eabi fails,'' \url{https://github.com/bytecodealliance/wamr-rust-sdk/issues/30}, 2024.

\bibitem{gh:criterion}
B.~Heisler, ``criterion.rs,'' \url{https://github.com/bheisler/criterion.rs/}.

\bibitem{gh:dhat}
N.~Nethercote, ``dhat-rs,'' \url{https://github.com/nnethercote/dhat-rs}.

\bibitem{gh:flamegraph}
flamegraph rs, ``flamegraph,'' \url{https://github.com/flamegraph-rs/flamegraph}.

\end{thebibliography}
